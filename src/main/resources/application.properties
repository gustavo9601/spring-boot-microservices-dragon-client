# Nombre de la app que se visualizara en eureka
spring.application.name=dragon-ball
# Perfile que se cargara de config server
spring.profiles.active=default
# Url del config server
spring.config.import=optional:configserver:http://host.docker.internal:8888

# Servidor
server.port=8082


# Configuracion del actuator
# Exponeos todos los enpoints
management.endpoints.web.exposure.include=*

# set path file logs
logging.file.name=C:\\logs_apps\\spring-boot-app.log

# Configuration zipkin
spring.zipkin.base-url=http://host.docker.internal:9411
spring.sleuth.async.enabled=true

# Configuration prometheus
management.metrics.export.prometheus.enabled=true

# http://host.docker.internal // Se usa para que al dockerizar apunte a la red interna
# Configuracion de eureka para que lo registre
# eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka


# Spring doc
# Especifica por el paquete que controladores se documentaran
springdoc.packages-to-scan=springbootmicroservicesclientdragon.springbootmicroservicesclientdragon.controllers
# Epecificando por path pattern que controladores se documentaran
springdoc.paths-to-match=/api/v1/dragon-ball/**


# Ejecutando el Dockerfile una vez de compile el jar
# docker run -p 8082:8082 docker-client-dragon/spring-boot-microservices-client-dragon:0.0.1-SNAPSHOT